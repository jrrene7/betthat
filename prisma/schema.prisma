// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String
  lastName   String?
  age        Int?
  email      String?
  posts Post[]
  betIds String[] @db.ObjectId
  bets   Bet[] @relation(fields: [betIds], references: [id])
  challengeIDs String[]   @db.ObjectId
  challenges  Challenge[] @relation(fields: [challengeIDs], references: [id])
  image      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model Post {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean  @default(false)
  authorID String?   @db.ObjectId
  author  User? @relation(fields: [authorID], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model Bet {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  bettorIDs String[] @db.ObjectId
  bettors   User[]   @relation(fields: [bettorIDs], references: [id])
  challengeID String?   @db.ObjectId
  challenge  Challenge? @relation(fields: [challengeID], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model Challenge {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  description String?
  bettorIDs String[] @db.ObjectId
  bettors   User[]   @relation(fields: [bettorIDs], references: [id])
  bets   Bet[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}